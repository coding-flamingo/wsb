@page "/stockDetails/{stock}"

@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (redditPosts == null)
{
    <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="margin-bottom: 20px" />
}
else
{
<RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced" AllowPaging="true" PageSize="10"
            AllowSorting="true" Data="@redditPosts" TItem="RedditPostModel" ColumnWidth="200px">
    <Columns>
        <RadzenGridColumn TItem="RedditPostModel" Property="postURL" Title="postURL" />
        <RadzenGridColumn TItem="RedditPostModel" Property="ups" Title="Up Votes" />
        <RadzenGridColumn TItem="RedditPostModel" Property="numComments" Title="Number of Comments" />
        <RadzenGridColumn TItem="RedditPostModel" Title="Request" Bubble="false" Filterable="false" Sortable="false" TextAlign="Radzen.TextAlign.Center">
            <Template Context="post">
                <a class="btn btn-primary" href="https://www.reddit.com/@post.postURL.TrimStart('/')" target="_blank" role="button">View on Reddit</a>
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>
}

@code {
    [Parameter] public string stock { get; set; }
    private RedditPostModel [] redditPosts;

    protected override async Task OnInitializedAsync()
    {
        redditPosts = await Http.GetFromJsonAsync<RedditPostModel[]>("api/ReadPosts/GetStockPosts?stock=" + stock);
    }

}
